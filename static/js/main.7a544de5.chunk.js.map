{"version":3,"sources":["serviceWorker.js","common/quotes.js","components/quote-box.js","components/header.js","components/footer.js","containers/quote-generator.js","index.js"],"names":["Boolean","window","location","hostname","match","quotes","SearchComponent","getNewQuote","quoteAuthor","Math","floor","random","length","split","document","getElementById","textContent","this","react_default","a","createElement","className","id","title","onClick","href","target","rel","Component","Header","Footer","QuoteGenerator","quote_box_SearchComponent","ReactDOM","render","quote_generator_QuoteGenerator","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7a544de5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const quotes = [\r\n  \"Luck? I don't know anything about luck. I've never banked on it and I'm afraid of people who do. Luck to me is something else: Hard work - and realizing what is opportunity and what isn't. #Lucille Ball\",\r\n  \"Any fool can have bad luck; the art consists in knowing how to exploit it. #Frank Wedekind\",\r\n  \"Chance favors the prepared mind. #Louis Pasteur\",\r\n  \"The winds and waves are always on the side of the ablest navigators. #Edward Gibbon\",\r\n  \"In the middle of every difficulty lies opportunity. #Albert Einstein\",\r\n  \"Small opportunities are often the beginning of great enterprises. #Demosthenes\",\r\n  \"I've found that luck is quite predictable. If you want more luck, take more chances. Be more active. Show up more often. #Brian Tracy\",\r\n  \"I think luck falls on not just the brave but also the ones who believe they belong there. #Novak Djokovic\",\r\n  \"Luck is a dividend of sweat. The more you sweat, the luckier you get. #Ray Kroc\",\r\n  \"My success was due to good luck, hard work, and support and advice from friends and mentors. But most importantly, it depended on me to keep trying after I had failed. #Mark Warner\",\r\n  \"A closed mouth gathers no feet. #Popular saying\",\r\n  \"A conclusion is simply the place where you got tired of thinking. #Popular saying\",\r\n  \"A cynic is only a frustrated optimist. #Popular saying\",\r\n  \"A fanatic is one who can't change his mind, and won't change the subject. #Popular saying\",\r\n  \"An alien of some sort will be appearing to you shortly. #Unknown\",\r\n  \"Do not mistake temptation for opportunity. #Popular saying\",\r\n  \"Flattery will go far tonight. #Unknown\",\r\n  \"He who laughs at himself never runs out of things to laugh at. #Popular saying\",\r\n  \"He who laughs last is laughing at you. #Popular saying\",\r\n  \"He who throws dirt is losing ground. #Popular saying\",\r\n  \"Some men dream of fortunes, others dream of cookies. #Popular saying\",\r\n  \"The greatest danger could be your stupidity. #Popular saying\",\r\n  \"The world may be your oyster, but it doesn't mean you'll get its pearl. #Popular saying\",\r\n  \"You will be hungry again in one hour. #Unknown\",\r\n  \"You can always find happiness at work on Friday. #Popular saying\",\r\n  \"Confucius say: if you think you’re going to sum up your whole life on this little bit of paper, you’re crazy. #Popular saying\"\r\n];\r\n\r\nexport default quotes;\r\n","import React, {Component}  from 'react';\r\nimport quotes from '../common/quotes';\r\n\r\nexport default class SearchComponent extends Component {\r\n  getNewQuote = () => {\r\n    let randomQuote = quotes[Math.floor(Math.random() * quotes.length)];\r\n\r\n    let quoteAuthor = randomQuote.split(\"#\");\r\n    document.getElementById('text').textContent = quoteAuthor[0];\r\n    document.getElementById('author').textContent = quoteAuthor[1];\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getNewQuote();\r\n  }\r\n\r\n\trender() {\r\n    return (\r\n      <div className=\"quote-box-container\">\r\n        <button className=\"quote-button\" id=\"new-quote\" title=\"Get new quote!\" onClick={this.getNewQuote}>\r\n          Try my luck!\r\n        </button>\r\n\r\n        <div className=\"quote-box\" id=\"quote-box\">\r\n          <span className=\"quote\" id=\"text\"></span>\r\n          <span className=\"author\" id=\"author\"></span>\r\n\r\n          <a id=\"tweet-quote\" title=\"Tweet quote!\" href=\"https://twitter.com/intent/tweet\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <button className=\"quote-button\" id=\"new-quote\">Tweet quote! <i className=\"fa fa-twitter\"></i></button>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n\t}\r\n};","import React from 'react';\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1 className=\"title\">Lucky Quote Generator</h1>\r\n\r\n      <h2 className=\"subtitle\">Feeling looped? </h2>\r\n      <h2 className=\"subtitle\">Attract good luck to your life with those lucky quotes.</h2>\r\n      <h2 className=\"subtitle\">Just click the button and choose your best!</h2>\r\n    </header>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Footer() {\r\n    return (\r\n      <footer className=\"footer\">\r\n        <ul className=\"social-list\">\r\n          <li className=\"contact\"><a href=\"mailto:carolinasknoll@gmail.com\"><i className=\"fa fa-envelope\"></i></a></li>\r\n          <li className=\"linkedin\"><a href=\"https://www.linkedin.com/in/carolinaknoll\"><i className=\"fa fa-linkedin\"></i></a></li>\r\n          <li className=\"github\"><a href=\"https://github.com/carolinaknoll\"><i className=\"fa fa-github\"></i></a></li>\r\n          <li className=\"twitter\"><a href=\"https://twitter.com/carolina_knoll\"><i className=\"fa fa-twitter\"></i></a></li>\r\n          <li className=\"codepen\"><a href=\"http://codepen.io/carolinaknoll/\"><i className=\"fa fa-codepen\"></i></a></li>\r\n          <li className=\"freecodecamp\"><a href=\"http://www.freecodecamp.com/carolinaknoll\"><i className=\"fa fa-fire\"></i></a></li>\r\n        </ul>\r\n        <p className=\"footer-note\">Made with <i className=\"fa fa-heart\"></i> by Carolina Knoll / 2019</p>\r\n      </footer>\r\n    );\r\n  }\r\n","import React, {Component} from 'react';\r\nimport QuoteBox from '../components/quote-box';\r\nimport Header from '../components/header';\r\nimport Footer from '../components/footer';\r\n\r\nexport default class QuoteGenerator extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"content-container\">\r\n        <div className=\"quote-generator-container\">\r\n          <Header />\r\n          <QuoteBox />\r\n        </div>\r\n\r\n        <div className=\"footer-container\">\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport QuoteGenerator from '../src/containers/quote-generator';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <QuoteGenerator />,\r\n  document.getElementById('root'),\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}